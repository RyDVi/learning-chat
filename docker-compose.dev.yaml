services:
  # backend:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.backend.dev
  #   container_name: learning_chat_backend
  #   volumes:
  #     - ./backend:/app
  #     - static_volume:/app/static
  #     - media_volume:/app/media
  #   ports:
  #     - "8000:8000"
  #     - "5678:5678"
  #   depends_on:
  #     - db
  #     - opensearch-node1
  #   restart: always
  #   networks:
  #     - app-network
  #   env_file:
  #     - .env
  #   environment:
  #     POSTGRES_HOST: db
  #     POSTGRES_PORT: 5432
  #     DEBUG: True
  #     ALLOWED_HOSTS: djangobackend
  #     OPENSEARCH_URL: http://opensearch-node1:9200

  # frontend:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.frontend.dev
  #   container_name: learning_chat_frontend
  #   volumes:
  #     - ./frontend:/app
  #     - app_node_modules:/app/node_modules
  #   ports:
  #     - "5173:5173"
  #   restart: always
  #   networks:
  #     - app-network
  #   env_file:
  #     - .env
  #   # environment:
  #     # API_URL: http://djangobackend:8000

  db:
    image: postgres:alpine
    container_name: learning_chat_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    expose:
      - "5432"
    restart: always
    networks:
      - app-network
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}

  # pgadmin:
  #   image: dpage/pgadmin4
  #   container_name: learning_chat_db_admin
  #   restart: always
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: admin@admin.admin   # Логин для доступа к pgAdmin
  #     PGADMIN_DEFAULT_PASSWORD: admin            # Пароль для доступа к pgAdmin
  #   ports:
  #     - "5050:80"   # Локальный порт 5050 связывается с портом pgAdmin
  #   networks:
  #     - app-network
  #   depends_on:
  #     - db          # Указываем, что pgAdmin зависит от контейнера с PostgreSQL



volumes:
  # static_volume:
  # media_volume:
  postgres_data:
  # app_node_modules:
  # opensearch-data1:

networks:
  app-network:
    name: app-network
    driver: bridge